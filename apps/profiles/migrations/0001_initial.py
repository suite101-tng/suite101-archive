# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-19 23:06
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import profiles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='SuiteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name=b'email address')),
                ('first_name', models.CharField(max_length=50, verbose_name=b'first name')),
                ('last_name', models.CharField(max_length=50, verbose_name=b'last name')),
                ('is_staff', models.BooleanField(db_index=True, default=False, help_text=b'Designates whether the user can log into this admin site.', verbose_name=b'staff status')),
                ('is_active', models.BooleanField(default=False, help_text=b'Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name=b'active')),
                ('activated', models.BooleanField(default=False)),
                ('is_moderator', models.BooleanField(default=False, help_text=b'Designates whether the user can moderate content.', verbose_name=b'moderator status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'date joined')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'date modified')),
                ('slug', autoslug.fields.AutoSlugField(editable=True, max_length=100, populate_from=b'get_full_name', unique=True)),
                ('by_line', models.CharField(blank=True, max_length=200, validators=[django.core.validators.MaxLengthValidator(200)], verbose_name=b'Byline')),
                ('full_bio', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=64, verbose_name=b'Your home')),
                ('tag_list', models.TextField(blank=True)),
                ('ga_code', models.CharField(blank=True, max_length=50, verbose_name=b'Google Analytics tracking code')),
                ('twitter_username', models.CharField(blank=True, max_length=64, verbose_name=b'Twitter Account')),
                ('facebook_url', models.URLField(blank=True, verbose_name=b'Facebook Url')),
                ('facebook_username', models.CharField(blank=True, max_length=128, verbose_name=b'Facebook Username')),
                ('personal_url', models.URLField(blank=True, verbose_name=b'Your website')),
                ('googleplus_url', models.URLField(blank=True, verbose_name=b'Google Plus Url')),
                ('twitter_connected', models.BooleanField(default=False)),
                ('twitter_link_key', models.CharField(blank=True, default=b'', max_length=40)),
                ('facebook_connected', models.BooleanField(default=False)),
                ('privacy', models.IntegerField(blank=True, default=1, null=True)),
                ('show_email', models.BooleanField(default=False)),
                ('ads_enabled', models.BooleanField(default=True)),
                ('accepted_terms', models.BooleanField(default=False)),
                ('read_rules', models.BooleanField(default=False)),
                ('approved', models.BooleanField(db_index=True, default=False)),
                ('featured', models.DateTimeField(db_index=True, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('indexed', models.BooleanField(db_index=True, default=False)),
                ('noindex_flag', models.BooleanField(default=False)),
                ('activation_key', models.CharField(blank=True, default=b'', max_length=40)),
                ('reset_key', models.CharField(blank=True, default=b'', max_length=40)),
                ('reset_time', models.DateTimeField(blank=True, null=True)),
                ('new_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('email_key', models.CharField(blank=True, default=b'', max_length=40)),
                ('email_change_time', models.DateTimeField(blank=True, null=True)),
                ('last_known_ip', models.CharField(blank=True, max_length=20)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('last_pub_date', models.DateTimeField(blank=True, null=True)),
                ('legacy_user_id', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'ordering': ['-date_joined'],
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserBackgroundImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=profiles.models.user_background_file_name)),
                ('image_large', models.ImageField(blank=True, null=True, upload_to=b'user_background/large')),
                ('image_small', models.ImageField(blank=True, null=True, upload_to=b'user_background/small')),
                ('top_position', models.IntegerField(default=0)),
                ('left_position', models.IntegerField(default=0)),
                ('scale', models.FloatField(default=1.0)),
                ('caption', models.CharField(blank=True, max_length=512)),
                ('credit', models.CharField(blank=True, max_length=512)),
                ('credit_link', models.CharField(blank=True, max_length=512)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='background', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBlackList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('last_known_ip', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserEmailSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_summary', models.BooleanField(default=True)),
                ('new_posts', models.BooleanField(default=True)),
                ('weekly_digest', models.BooleanField(default=True)),
                ('all_chat_messages', models.BooleanField(default=True)),
                ('notifications', models.BooleanField(default=True)),
                ('product_updates', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=b'user_images/main')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=b'user_images/thumbs')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='suiteuser',
            name='profile_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profiles.UserImage'),
        ),
        migrations.AddField(
            model_name='suiteuser',
            name='user_background',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_background', to='profiles.UserBackgroundImage'),
        ),
        migrations.AddField(
            model_name='suiteuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
